[workspace]
authors = ["Mike Xiangyu Liu <liu.xiangyu@ucy.ac.cy>"]
channels = ["conda-forge"]
name = "mesa"
platforms = ["linux-64"]
version = "0.1.0"

[tasks]
build-jrl = { cwd = "deps/jrl", cmd = "mkdir -p build && cd build && cmake .. -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DJRL_BUILD_PYTHON=ON -DCMAKE_INSTALL_PREFIX=$CONDA_PREFIX && make -j10 && make install && make jrl-python-install" }
build = { cmd = "mkdir -p build && cd build && cmake .. -G Ninja -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Release && ninja" }
build-gtsam = { cmd = "cd deps/gtsam && mkdir -p build && cd build && cmake .. -DGTSAM_USE_SYSTEM_EIGEN=ON -DGTSAM_USE_SYSTEM_METIS=ON -DGTSAM_BUILD_EXAMPLES_ALWAYS=OFF -DGTSAM_BUILD_TESTS=OFF -DGTSAM_BUILD_PYTHON=ON -DCMAKE_INSTALL_PREFIX=$CONDA_PREFIX && make -j10 && make install && make python-install" }
# Visualization and development tasks
jupyter = { cmd = "jupyter lab --ip=0.0.0.0 --port=8888 --no-browser --allow-root" }
notebook = { cmd = "jupyter notebook --ip=0.0.0.0 --port=8888 --no-browser --allow-root" }

[tasks.plot-results]
cmd = "python scripts/plot-results -d data/results/jrl/{{ d }}.jrl -r data/results/seq/{{ r }} --is3d"
args = [
  { "arg" = "d", "default" = "input_MITb_g2o_3d" },
  { "arg" = "r", "default" = "input_MITb_g2o_3d_dgs_2025-08-06_14-58-24/final_results.jrr.cbor" },
]

[tasks.plot-jrl]
cmd = "python scripts/plot-jrl data/results/jrl/{{ d }}.jrl --is3d"
args = [
  { "arg" = "d", "default" = "input_MITb_g2o_3d" },
]


[dependencies]
numpy = "*"
matplotlib = "*"
scipy = "*"
setuptools = "*"
ninja = ">=1.13.1,<2"
cmake = "<4"
pip = "*"
seaborn = "*"
# Visualization dependencies
plotly = "*"
jupyter = "*"
jupyterlab = "*"
ipywidgets = "*"
bokeh = "*"
pandas = "*"
# OpenGL and graphics support
mesa-libgl-cos6-x86_64 = "*"
mesa-dri-drivers-cos6-x86_64 = "*"



[tasks.install-fonts]
cmd = [
  "bash", "-c", """
  echo "Installing system fonts..." &&
  
  # Create fonts directory if it doesn't exist
  mkdir -p ~/.local/share/fonts &&
  
  # Download Times New Roman font files from a reliable source
  echo "Downloading Times New Roman fonts..." &&
  cd ~/.local/share/fonts &&
  
  # Download individual Times New Roman font files
  if ! ls *times*.ttf >/dev/null 2>&1 && ! ls *Times*.ttf >/dev/null 2>&1; then
    echo "Downloading Times New Roman font files..." &&
    
    # Download from freedesktop.org or other reliable sources
    curl -L -o "times.ttf" "https://github.com/google/fonts/raw/main/ofl/crimsontext/CrimsonText-Regular.ttf" &&
    curl -L -o "timesbd.ttf" "https://github.com/google/fonts/raw/main/ofl/crimsontext/CrimsonText-Bold.ttf" &&
    curl -L -o "timesi.ttf" "https://github.com/google/fonts/raw/main/ofl/crimsontext/CrimsonText-Italic.ttf" &&
    curl -L -o "timesbi.ttf" "https://github.com/google/fonts/raw/main/ofl/crimsontext/CrimsonText-BoldItalic.ttf" &&
    
    echo "Downloaded alternative serif fonts (Crimson Text as Times substitute)"
  else
    echo "Times-like fonts already present"
  fi &&
  
  # Try to download Liberation fonts as a good Times alternative
  echo "Downloading Liberation fonts..." &&
  if ! ls *liberation*.ttf >/dev/null 2>&1 && ! ls *Liberation*.ttf >/dev/null 2>&1; then
    curl -L -o "LiberationSerif-Regular.ttf" "https://github.com/liberationfonts/liberation-fonts/releases/download/2.1.5/liberation-fonts-ttf-2.1.5.tar.gz" -o liberation.tar.gz &&
    tar -xzf liberation.tar.gz --strip-components=1 "liberation-fonts-ttf-2.1.5/*.ttf" 2>/dev/null || echo "Extraction failed, trying alternative..." &&
    rm -f liberation.tar.gz
  fi &&
  
  # Update font cache
  echo "Updating system font cache..." &&
  fc-cache -f -v &&
  
  # Rebuild matplotlib font cache  
  echo "Rebuilding matplotlib font cache..." &&
  python rebuild_font_cache.py &&
  
  echo "Font installation complete!" &&
  echo "Available fonts:" &&
  fc-list | grep -E -i "(times|liberation|serif|crimson)" || echo "Checking all available fonts..." &&
  fc-list | head -10
  """
]